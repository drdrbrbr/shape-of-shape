---
import Page from "@/layouts/Page.astro";
//microCMS呼び出し
import { getArticles } from "../library/microcms";
const response = await getArticles({ fields: ["id", "title"] });
---

<Page title="TOP" pageClass="index">
  <div class="kv">
    <div id="p5-canvas"></div>
    <h1>
      <div>
        <span>S</span><span>H</span><span>A</span><span>P</span><span>E</span>
      </div>
      <div><span>O</span><span>F</span></div>
      <div>
        <span>S</span><span>H</span><span>A</span><span>P</span><span>E</span>
      </div>
    </h1>
    <p class="jp_title">かたち の かたち</p>
  </div>
  <div class="wrap">
    <ul>
      {
        response.contents.map((content: any) => (
          <li>
            <a href={`/${content.id}`}>
              <span class="index">{`(${content.id})`}</span>
              <span
                class="title"
                set:html={content.title.replace(/\n/g, "<br>")}
              />
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</Page>

<style lang="scss">
  .kv {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;

    #p5-canvas {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 1;
      @include mq(sp) {
        scale: 0.5;
        transform: translate(-100%, -105%);
      }

      canvas {
        width: 600px !important;
        height: 600px !important;
        display: block !important;
        max-width: none !important;
        max-height: none !important;
      }
    }

    h1 {
      font-weight: 200;
      font-style: italic;
      font-size: 20vh;
      width: 90%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center;
      height: 90vh;
      position: relative;
      z-index: 2;
      div {
        display: flex;
        justify-content: space-between;
        width: 100%;
      }

      span {
        display: block;
        line-height: 100%;
        transition: transform 0.2s var(--ease-quint-out);
      }
      @include mq(sp) {
        font-size: 10vh;
        font-weight: 200;
        height: 95vh;
      }
    }
    .jp_title {
      font-size: get_pc_vw(12);
      font-weight: 500;
      line-height: 100%;
      letter-spacing: 0.28em;
      position: absolute;
      top: 50%;
      right: 25%;
      transform: translateY(-50%);
      @include mq(sp) {
        text-align: center;
        font-size: get_sp_vw(24);
        top: 70%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
      }
    }
  }
  .wrap {
    padding: 0 get_pc_vw(8);
    @include mq(sp) {
      padding: 0 24px;
    }
    ul {
      margin-top: 40px;
      display: flex;
      flex-wrap: wrap;
      gap: get_pc_vw(66);
      @include mq(sp) {
        gap: 0vw;
        justify-content: space-between;
      }
      li {
        font-size: get_pc_vw(12);
        position: relative;
        @include mq(sp) {
          font-size: get_sp_vw(32);
        }
        a {
          width: get_pc_vw(170);
          height: get_pc_vw(170);
          display: block;
          padding: get_pc_vw(8) 0 0 get_pc_vw(8);
          @include mq(sp) {
            width: 43vw;
            height: 43vw;
          }
          &:hover {
            background-color: var(--key-color);
            color: #fff;
          }
          .index {
            font-weight: 600;
            line-height: 100%;
            letter-spacing: 0.02em;
          }
          .title {
            display: block;
            margin-top: get_pc_vw(10);
          }
        }
      }
    }
  }
</style>

<script>
  // p5.jsでランダムな形を描画
  import { ShapeMorphing } from "../scripts/modules/ShapeMorphing";
  document.addEventListener("DOMContentLoaded", function () {
    const spans = document.querySelectorAll(".kv span");

    spans.forEach((span) => {
      // 0, 90, 180, 270度の中からランダムに選択
      const rotations = [0, 90, 180, 270];
      const randomRotation =
        rotations[Math.floor(Math.random() * rotations.length)];

      (span as HTMLElement).style.transform = `rotate(${randomRotation}deg)`;
    });

    new ShapeMorphing();
  });
</script>
